//#include "keys_nb_osx.h"
//#include "keys_nb_win.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        C_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <13 12>;
        };

        C_apos {
            bindings = <&kp APOSTROPHE>;
            key-positions = <22 23>;
        };

        C_backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <34 35>;
        };

        C_minus {
            bindings = <&kp MINUS>;
            key-positions = <10 11>;
        };

        C_equal {
            bindings = <&kp EQUAL>;
            key-positions = <1 0>;
        };

        C_grave {
            bindings = <&kp GRAVE>;
            key-positions = <25 24>;
        };

        C_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 25>;
        };

        C_rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 34>;
        };

        C_Lpgup {
            bindings = <&kp PAGE_UP>;
            key-positions = <2 1>;
        };

        C_Rpgup {
            bindings = <&kp PAGE_UP>;
            key-positions = <9 10>;
        };

        C_Lpgdn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <26 25>;
        };

        C_Rpgdn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <33 34>;
        };

        C_Lhome {
            bindings = <&kp HOME>;
            key-positions = <3 2>;
        };

        C_Rhome {
            bindings = <&kp HOME>;
            key-positions = <8 9>;
        };

        C_Lend {
            bindings = <&kp END>;
            key-positions = <27 26>;
        };

        C_Rend {
            bindings = <&kp END>;
            key-positions = <32 33>;
        };

        C_Llc {
            bindings = <&mkp MB1>;
            key-positions = <14 15>;
        };

        C_Rlc {
            bindings = <&mkp MB1>;
            key-positions = <20 21>;
        };

        C_Lrc {
            bindings = <&mkp MB2>;
            key-positions = <14 13>;
        };

        C_Rrc {
            bindings = <&mkp RCLK>;
            key-positions = <21 22>;
        };

        C_Lnum {
            bindings = <&mo 1>;
            key-positions = <17 5>;
        };

        C_Rnum {
            bindings = <&mo 1>;
            key-positions = <18 6>;
        };

        C_Lfn {
            bindings = <&mo 2>;
            key-positions = <5 29>;
        };

        C_Rfn {
            bindings = <&mo 2>;
            key-positions = <6 30>;
        };

        C_del {
            bindings = <&kp DELETE>;
            key-positions = <32 21>;
        };

        C_insert {
            bindings = <&kp INSERT>;
            key-positions = <27 14>;
        };

        C_Rscroll {
            bindings = <&tog 3>;
            key-positions = <22 32>;
        };

        C_Lscroll {
            bindings = <&tog 4>;
            key-positions = <13 27>;
        };

        C_Rm3 {
            bindings = <&mkp MB3>;
            key-positions = <20 22>;
        };

        C_Lm3 {
            bindings = <&mkp MB3>;
            key-positions = <15 13>;
        };
    };

    behaviors {
        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <17 29 5 6 18 30 35 23 11 20 21 22 23 32 33 34 7 8 9 10 19 20 21 22 31 32 33 34>;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 6 18 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q            &kp W            &kp E         &kp R          &kp T  &mo 6        &mo 5          &kp Y  &kp U               &kp I         &kp O             &kp P
&HML LEFT_GUI A  &HML LEFT_ALT S  &HML LCTRL D  &HML LSHIFT F  &kp G  &kp SPACE    &kp BACKSPACE  &kp H  &HMR RIGHT_SHIFT J  &HMR RCTRL K  &HMR RIGHT_ALT L  &HMR RIGHT_GUI SEMI
&kp Z            &kp X            &kp C         &kp V          &kp B  &kp TAB      &kp ENTER      &kp N  &kp M               &kp COMMA     &kp DOT           &kp SLASH
            >;
        };

        num {
            bindings = <
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans    &trans  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&trans           &trans        &trans        &trans        &trans        &trans    &trans  &trans        &trans         &trans        &trans                &trans
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &trans    &trans  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        functions {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans    &trans  &trans  &kp F12  &kp F11  &kp F10  &kp F9
&kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans    &trans  &trans  &kp F8   &kp F7   &kp F6   &kp F5
&kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans    &trans  &trans  &kp F4   &kp F3   &kp F2   &kp F1
            >;
        };

        Rscroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Lscroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Rnav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans          &trans          &trans        &trans
            >;
        };

        Lnav {
            bindings = <
&trans          &trans        &trans          &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans          &trans           &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
